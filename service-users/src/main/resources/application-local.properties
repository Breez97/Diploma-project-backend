spring.application.name=SERVICE-USERS

server.port=${SERVICE_USERS_PORT:8082}

spring.datasource.url=jdbc:postgresql://${SPRING_DATASOURCE_HOST:localhost}:${SPRING_DATASOURCE_PORT:5432}/${SERVICE_USERS_DB_NAME:service-users}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.jpa.hibernate.ddl-auto=create

spring.mail.host=${SPRING_MAIL_HOST}
spring.mail.port=${SPRING_MAIL_PORT}
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}

skip.code.verification=${SKIP_CODE_VERIFICATION}

spring.kafka.bootstrap-servers=${SPRING_KAFKA_HOST:localhost}:${SPRING_KAFKA_PORT:9092}

spring.kafka.producer.key-serializer=${SPRING_KAFKA_PRODUCER_KEY_SERIALIZER:org.apache.kafka.common.serialization.StringSerializer}
spring.kafka.producer.value-serializer=${SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER:org.springframework.kafka.support.serializer.JsonSerializer}
app.kafka.topic.user-favorites=${APP_KAFKA_TOPIC_USER_FAVORITES:user_favorites_topic}
app.kafka.topic.user-notifications=${APP_KAFKA_TOPIC_USER_NOTIFICATIONS:user_notifications_topic}

jwt.secret=${JWT_SECRET}
jwt.access.token.expiration.ms=${JWT_ACCESS_TOKEN_EXPIRATION_MS}
jwt.refresh.token.expiration.ms=${JWT_REFRESH_TOKEN_EXPIRATION_MS}

path.to.images=${PATH_TO_IMAGES}

app.services.monitoring.url=http://localhost:${SERVICE_MONITORING_PORT:8083}/api/internal/monitoring/item/history