spring.application.name=${SPRING_APPLICATION_NAME_SERVICE_USERS}

server.port=${SERVER_PORT_SERVICE_USERS}
server.forward-headers-strategy=none

spring.datasource.url=jdbc:postgresql://${SPRING_DATASOURCE_HOST_LOCAL}:${SPRING_DATASOURCE_PORT}/${SERVICE_USERS_DB_NAME}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.jpa.hibernate.ddl-auto=create

spring.mail.host=${SPRING_MAIL_HOST}
spring.mail.port=${SPRING_MAIL_PORT}
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}

spring.kafka.bootstrap-servers=${SPRING_KAFKA_HOST_LOCAL}:${SPRING_KAFKA_PORT_LOCAL}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
kafka.topic.user-favorites=${KAFKA_TOPIC_USER_FAVORITES}
kafka.topic.user-notifications=${KAFKA_TOPIC_USER_NOTIFICATIONS}


path.to.images=${PATH_TO_IMAGES}

services.monitoring.url=http://localhost:${SERVER_PORT_SERVICE_MONITORING}/api/internal/monitoring/item/history
services.notifications.url=http://localhost:${SERVER_PORT_SERVICE_NOTIFICATIONS}/api/internal/notifications

springdoc.api-docs.path=/v3/api-docs

skip.code.verification=${SKIP_CODE_VERIFICATION}

jwt.secret=${JWT_SECRET}
jwt.access.token.expiration.ms=${JWT_ACCESS_TOKEN_EXPIRATION_MS}
jwt.refresh.token.expiration.ms=${JWT_REFRESH_TOKEN_EXPIRATION_MS}