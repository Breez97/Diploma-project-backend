services:
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: api-gateway-container
    restart: on-failure
    ports:
      - "${API_GATEWAY_PORT:-8080}:${API_GATEWAY_PORT:-8080}"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - SERVICE_SEARCH_PORT=${SERVICE_SEARCH_PORT}
    env_file:
      - ./.env
    networks:
      - docker-network
    depends_on:
      - service-search

  service-search:
    build:
      context: .
      dockerfile: service-search/Dockerfile
    container_name: service-search-container
    restart: on-failure
    ports:
      - "${SERVICE_SEARCH_PORT:-8081}:${SERVICE_SEARCH_PORT:-8081}"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVICE_SEARCH_PORT=${SERVICE_SEARCH_PORT}
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=${SPRING_REDIS_PORT}
      - SPRING_DATA_REDIS_TIMEOUT=${SPRING_REDIS_TIMEOUT}
    env_file:
      - ./.env
    networks:
      - docker-network
    depends_on:
      - redis

  redis:
    image: redis:7.4-alpine
    container_name: redis-container
    restart: always
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - docker-network
    volumes:
      - redis-data:/data

  service-users:
    build:
      context: .
      dockerfile: service-users/Dockerfile
    container_name: service-users-container
    restart: on-failure
    ports:
      - "${SERVICE_USERS_PORT:-8082}:${SERVICE_USERS_PORT:-8082}"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVICE_USERS_PORT=${SERVICE_USERS_PORT}
      - SPRING_DATASOURCE_HOST=postgres-db
      - SPRING_DATASOURCE_PORT=5432
      - SERVICE_USERS_DB_NAME=${SERVICE_USERS_DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_TOKEN_EXPIRATION_MS=${JWT_ACCESS_TOKEN_EXPIRATION_MS}
      - JWT_REFRESH_TOKEN_EXPIRATION_MS=${JWT_REFRESH_TOKEN_EXPIRATION_MS}
    env_file:
      - ./.env
    networks:
      - docker-network
    depends_on:
      - postgres-db

  postgres-db:
    image: postgres:17
    container_name: postgres-container
    restart: always
    environment:
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      POSTGRES_DB: ${SERVICE_USERS_DB_NAME}
    ports:
      - "${POSTGRES_HOST_PORT:-5433}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - docker-network

networks:
  docker-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
  postgres-data:
    driver: local