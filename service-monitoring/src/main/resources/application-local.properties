spring.application.name=${SPRING_APPLICATION_NAME_SERVICE_MONITORING}

server.port=${SERVER_PORT_SERVICE_MONITORING}
server.forward-headers-strategy=none

spring.datasource.url=jdbc:postgresql://${SPRING_DATASOURCE_HOST_LOCAL}:${SPRING_DATASOURCE_PORT}/${SERVICE_MONITORING_DB_NAME}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.jpa.hibernate.ddl-auto=create

spring.kafka.bootstrap-servers=${SPRING_KAFKA_HOST_LOCAL}:${SPRING_KAFKA_PORT_LOCAL}
spring.kafka.consumer.group-id=${SPRING_KAFKA_CONSUMER_GROUP_ID_MONITORING}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.value.default.type=com.breez.dto.event.FavoritesEventDto
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


springdoc.api-docs.path=/v3/api-docs

kafka.topic.user-favorites=${KAFKA_TOPIC_USER_FAVORITES}
kafka.topic.user-price-alerts=${KAFKA_TOPIC_USER_PRICE_ALERTS}

services.service-search.url=http://localhost:${SERVER_PORT_SERVICE_SEARCH}/api/v1/search

test.notifications.email=${TEST_NOTIFICATIONS_EMAIL}