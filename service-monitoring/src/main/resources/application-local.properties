spring.application.name=SERVICE-MONITORING

server.port=${SERVICE_MONITORING_PORT:8083}

spring.datasource.url=jdbc:postgresql://${SPRING_DATASOURCE_HOST:localhost}:${SPRING_DATASOURCE_PORT:5432}/${SERVICE_MONITORING_DB_NAME:service-monitoring}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.jpa.hibernate.ddl-auto=create

spring.kafka.bootstrap-servers=localhost:9092

spring.kafka.consumer.group-id=${SPRING_KAFKA_CONSUMER_MONITORING_GROUP_ID:service-monitoring-group}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=${SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER:org.apache.kafka.common.serialization.StringDeserializer}
spring.kafka.consumer.value-deserializer=${SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER:org.springframework.kafka.support.serializer.JsonDeserializer}
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.value.default.type=com.breez.dto.event.FavoritesEventDto

spring.kafka.producer.key-serializer=${SPRING_KAFKA_PRODUCER_KEY_SERIALIZER:org.apache.kafka.common.serialization.StringSerializer}
spring.kafka.producer.value-serializer=${SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER:org.springframework.kafka.support.serializer.JsonSerializer}

app.kafka.topic.user-favorites=${APP_KAFKA_TOPIC_USER_FAVORITES:user_favorites_topic}
app.kafka.topic.user-price-alerts=${APP_KAFKA_TOPIC_USER_PRICE_ALERTS:user_price_alerts_topic}

app.services.service-search.url=http://localhost:${SERVICE_SEARCH_PORT:8082}/api/v1/search

test.notifications.email=${TEST_NOTIFICATIONS_EMAIL}